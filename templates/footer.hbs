<footer class="footer">
  <div class="footer-inner">
    <div>
      {{#link 'help_center'}}{{help_center.name}}{{/link}} | <a title="Exclaimer" href="https://www.exclaimer.com/">Exclaimer</a>
    </div>
    <div class="footer-language-selector">
      {{#if alternative_locales}}
      <div class="dropdown language-selector" aria-haspopup="true">
        <a class="dropdown-toggle">
          {{current_locale.name}}
        </a>
        <span class="dropdown-menu dropdown-menu-end" role="menu">
          {{#each alternative_locales}}
          <a href="{{url}}" dir="{{direction}}" rel="nofollow" role="menuitem">
            {{name}}
          </a>
          {{/each}}
        </span>
      </div>
      {{/if}}
    </div>
  </div>
</footer>

<script type="text/javascript">
  window.zESettings = {
    webWidget: {
      // Color API - All Sites
      color: {
        theme: "#F37021",
        launcher: "#F37021", // This will also update the badge
        launcherText: "#FFFFFF",
        button: "#576476",
        resultLists: "#576476",
        header: "#576476",
        articleLinks: "#F37021",
      },
      // Contact Form API */
      contactForm: {
        suppress: false,
        title: {
          "*": "Raise a ticket",
        },
        ticketForms: [
        {
          id: 360000355937,
          title: false
        }
        ],
        subject: true,
        attachments: true,
      },
      // Chat API - All Sites
      chat: {
        suppress: false,
        title: {
          "*": "Ask Us Anything",
        },
        departments: {
          enabled: ["Technical Support", "Sales", "Resellers"],
          select: "Technical Support",
        },
        concierge: {
          avatarPath: 'https://cdn.exclaimer.com/Static2/exclaimer-icon_256x256.png',
          name: 'Exclaimer'
        },
        profileCard: {
          avatar: true,
          rating: true,
          title: true,
        },
        hideWhenOffline: true,
        prechatForm: {
          greeting: {
            "*":
              "To ensure our representatives can help you as quickly as we can.\n\nPlease provide a as much information as you can about your query in the message area below.\n",
          },
          departmentLabel: {
            "*": "Select a department",
          },
        },
        offlineForm: {
          greeting: {
            "*": "We aren't online right now, please leave a message",
          },
        },
      },
      // Helpcenter API - All Sites
      helpCenter: {
        suppress: false,
        title: {
          "*": "Search for help",
        },
        searchPlaceholder: {
          "*": "Search our Help Center",
        },
      },
      // Answerbot API
      answerBot: {
        suppress: false,
        title: {
          "*": "Chat with us!",
        },
        contactOnlyAfterQuery: true,
        search: {
          labels: ["I would like help."],
        },
        avatar: {
          url:
            "https://cdn.exclaimer.com/Static2/exclaimer-icon_256x256.png",
          name: {
            "*": "Exclaimer",
          },
        },
      },
      // Launcher API - All Sites
      launcher: {
        label: {
          "*": "Get help?",
        },
        chatLabel: {
          "*": "Chat online",
        },
        talkLabel: {
          "*": "Ask for a callback"
        },
        mobile: {
          labelVisible: true,
        },
      },
      // Contact options - All Sites
      contactOptions: {
        enabled: true,
        title: {
          "*": "Contact Us",
        },
        contactButton: {
          "*": "Get in touch",
        },
        chatLabelOnline: {
          "*": "Chat online",
        },
        chatLabelOffline: {
          "*": "Chat is unavailable",
        },
        contactFormLabel: {
          "*": "Raise a ticket",
        },
      },
    },
  };
</script>
<script type="text/javascript">
// Article Accordion
var acc = document.getElementsByClassName("article-accordion");
var i;

for (i = 0; i < acc.length; i++) {
  acc[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var panel = this.nextElementSibling;
    if (panel.style.maxHeight) {
      panel.style.maxHeight = null;
    } else {
      panel.style.maxHeight = panel.scrollHeight + "px";
    }
  });
}
</script>